AssetBundleManager Extend
Version 1.1

启动: PogoTools/AssetBundle Settings
快捷键: Shift + Command + A
位置: Assets/VariousAssets/AssetBundleManager(必须置于此位置)

- Loading
  - Title 项的注释
    - Enable 启用开关
    - Url Id 每组资源的 id 标记(项目可以同时或非同时的加载多组资源)
    - Title 本项的标题,自己随便写.
    - Is Local 本项资源从 StreamingAssets 中读取,将忽略 Url
    - Simulation 本项资源以模拟方式直接从本地读出,仅限编辑器状态下
    - Url 本项资源包的原地址,经常是一个 FTP 或 HTTP 地址
    - '内置' 自动配置为使用 StreamingAssets 的方式;
    - '本地自定义' 自动配置为直接使用本地自定义路径下的资源的方式;
    - '本机 HTTP' 自动配置为本机的 HTTP 的方式(可在 Settings 标签页中开启 HTTP);
    - '本机的 FTP' 自动配置为本机的 FTP 的方式(可能需要修改为指定的 FTP 位置);
    - '详细信息' 在编辑器下直接解析该项资源包括的所有资源包名称和资源名称,并在新的窗口中以列表显示;

- Export
  - Title 项的注释
    - Enable 启用开关
    - Url Id 每组资源的 id 标记(项目可以同时或非同时的加载多组资源)
    - Title 本项的标题,自己随便写.
    - Clear 勾选将会在发布/拷贝到本地的(非 FTP)位置时,首先进行清理.
    - Urls 资源将要发布的位置
      - 直接写目录名称指项目根目录
      - 支持 FTP 形式,如:
        - ftp://192.168.199.215:21/PogoFrameAssets|ethan|ethan
          - 后两部分为FTP的用户名和密码
    - Target Standalone 资源包的区分平台版本
    - Target IOS 资源包的区分平台版本
    - Target Android 资源包的区分平台版本
    - Filter Mode 过滤模式:忽略(全部都打包), OPT_IN选择性加入, OPT_OUT选择性剔除
    - Filter 过滤列表(资源路径的前部匹配)
  - "发布 AssetBundles !!" 按钮
    - 将按照列表的设置项打包/复制资源包

- Settings
  - "Save to .config files ..." 将配置信息存入文件
  - "Load from configs files ..." 从文件读取配置信息
  - 开启/关闭 HTTP 服务
    - 可以使本机项目根目录下的 AssetBundles 位置成为 HTTP服务主目录
    - 便于模拟测试本机的 AssetBundles 产品
    - 如果没有 FTP 的话还是很方便的